import mongoose from 'mongoose'; // importing mongoose library for interacting w the database (MongoDB)

// defining the structure and type of fields that the 'order' document must have
const orderSchema = new mongoose.Schema(
  {
    orderItems: [
      { // each item has the following property 
        slug: { type: String, required: true }, // user friendly url
        name: { type: String, required: true },
        quantity: { type: Number, required: true },
        image: { type: String, required: true },
        price: { type: Number, required: true },
        product: {
          type: mongoose.Schema.Types.ObjectId, // 'type' variable is storing the ID for each product, and the id is generated by MongoDB
          ref: 'Product', // referencing another schema 
          required: true, // there must be a product for the order document to proceed
        },
      },
    ],
    // other schemas for shipping payment etc
    shippingAddress: {
      fullName: { type: String, required: true },
      address: { type: String, required: true },
      city: { type: String, required: true },
      postalCode: { type: String, required: true },
      country: { type: String, required: true },
    },
    paymentMethod: { type: String, required: true },
    paymentResult: {
      id: String,
      status: String,
      update_time: String,
      email_address: String,
    },
    itemsPrice: { type: Number, required: true },
    shippingPrice: { type: Number, required: true },
    taxPrice: { type: Number, required: true },
    totalPrice: { type: Number, required: true },
    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
    isPaid: { type: Boolean, default: false },
    paidAt: { type: Date },
    isDelivered: { type: Boolean, default: false },
    deliveredAt: { type: Date },
  },
  { // will create the mongoose fields for createdAt and updatedAt etc 
    timestamps: true,
  }
);

// mongoose.model() creates a model in mongoDB
const Order = mongoose.model('Order', orderSchema);
export default Order;